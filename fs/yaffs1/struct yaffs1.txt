git clone git://www.aleph1.co.uk/yaffs2 If you are a registered developer with a server account you can get read/write access using:

git clone ssh://www.aleph1.co.uk/home/aleph1/git/yaffs2


struct yaffs_ChunkCache
	struct yaffs_ObjectStruct


struct yaffs_Tags


struct yaffs_TagsUnion
	struct yaffs_Tags


struct yaffs_Spare 16byte


struct yaffs_NANDSpare
	struct yaffs_Spare


enum yaffs_BlockState


//坏块标记
struct yaffs_BlockInfo


enum yaffs_ObjectType


struct yaffs_ObjectHeader
	enum yaffs_ObjectType


union yaffs_Tnode_union
	union yaffs_Tnode_union
typedef union yaffs_Tnode_union yaffs_Tnode;


struct yaffs_TnodeList_struct
	struct yaffs_TnodeList_struct
typedef struct yaffs_TnodeList_struct yaffs_TnodeList;



///////////////////  Object ////////////////////////////////
struct yaffs_FileStructure
	typedef union yaffs_Tnode

struct yaffs_DirectoryStructure
	struct list_head


struct yaffs_SymLinkStructure

struct yaffs_HardLinkStructure
	struct yaffs_ObjectStruct



typedef union yyaffs_ObjectVariant



typedef struct yaffs_ObjectStruct yaffs_Object;
	struct yaffs_DeviceStruct
	struct list_head hashLink;
	struct list_head hardLinks;
	struct yaffs_ObjectStruct parent
	struct inode
	enum yaffs_ObjectType
	enum yaffs_ObjectVariant



typedef struct yaffs_ObjectList_struct yaffs_ObjectList;
	yaffs_Object
	struct yaffs_ObjectList_struct


struct yaffs_ObjectBucket
	struct list_head


typedef struct yaffs_DeviceStruct yaffs_Device
	int (*writeChunkToNAND)();
	int (*readChunkFromNAND)();
	int (*eraseBlockInNAND)();	
	int (*initialiseNAND)()
	yaffs_BlockInfo
	yaffs_Tnode
	yaffs_Object
	yaffs_ObjectList
	yaffs_ObjectBucket
	yaffs_ChunkCache










///////////////////////// Object management //////////////////
///////////////////////// TNODES ///////////////////////
////////////////// END OF TNODE MANIPULATION ///////////////////////////
/////////////////////// End of File Structure functions. /////////////////
/////////////////////////// Block Management and Page Allocation ///////////////////
//////////////////////////// TAGS ///////////////////////////////////////
/////////////////////// Short Operations Cache ////////////////////////////////
///////////////////////// File read/write ///////////////////////////////
//////////////// Initialisation Scanning /////////////////
////////////////////////// Directory Functions /////////////////////////
///////////////////////// Initialisation code ///////////////////////////
/////////////////// YAFFS test code //////////////////////////////////


1、代码里面是不是还要判断internalEndBlock
static int yaffs_WriteChunkToNAND(struct yaffs_DeviceStruct *dev,int chunkInNAND, const __u8 *data, yaffs_Spare *spare)
{
	if(chunkInNAND < dev->internalStartBlock * dev->nChunksPerBlock)


2、CONFIG_YAFFS_DISABLE_WRITE_VERIFY上升一行
				yaffs_ReadChunkFromNAND(dev,chunk,rbData,&rbSpare,0);
				
#ifndef CONFIG_YAFFS_DISABLE_WRITE_VERIFY
				if(!yaffs_VerifyCompare(data,rbData,spare,&rbSpare))



	i = chunkId >> (/*dev->chunkGroupBits  + */4);
	requiredTallness = 0;
	while(i)
	{
		i >>= 3;
		requiredTallness++;
	}
	
	
	if(requiredTallness > fStruct->topLevel)
	{
		// Not tall enough, so we can't find it, return NULL.
		return NULL;
	}
		
	
	// Traverse down to level 0
	while (level > 0 && tn)
	{
	    tn = tn->internal[(chunkId >>(/* dev->chunkGroupBits + */4 + (level-1) * 3)) & 7]; 
		level--;
	
	}